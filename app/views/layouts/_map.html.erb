<% map_attr = map.gcmap %>
<% map_id = map_attr[:id] %>
<% provide(:og_image, map_attr[:img_path]) unless content_for(:og_image) %>
<div class="map-gcmap <%= map_attr[:map_type] %>" id="<%= map_attr[:id] %>">
  <div class="map-mapbox" id="mapbox_<%= map_id %>"></div>
  <% if local_assigns[:region] %>
    <%= gcmap_region_select_links(map, region, anchor: map_attr[:id]) %>
  <% end %>
  <%= link_to(image_tag(map_attr[:img_path], alt: map_attr[:description], class: "map"), map_attr[:link_path], target: :_blank) %>
  <div class="map-info credit">
    <div>
      Map generated by <%= link_to("Great Circle Mapper", "http://www.gcmap.com/", target: "_blank") %>
    </div>
    <div>
      <%= link_to("GPX", params.permit!.merge(map_id: map_attr[:id], extension: :gpx), download: "#{map_attr[:id]}.gpx") %>
      &middot; 
      <%= link_to("KML", params.permit!.merge(map_id: map_attr[:id], extension: :kml), download: "#{map_attr[:id]}.kml") %>
      &middot; 
      <%= link_to("GeoJSON", params.permit!.merge(map_id: map_attr[:id], extension: :geojson), download: "#{map_attr[:id]}.geojson") %>
    </div>
  </div>
  <% if local_assigns[:distance] %>
    <div class="map-metrics">
      <span class="distance-mi">
        <%= NumberFormat.value(distance[:miles]) %> <%= [distance[:adjective],"mile"].compact.join(" ").pluralize(distance[:miles]) %>
      </span>
      &middot;
      <span class="distance-km">
        <%= NumberFormat.value(Distance::km(distance[:miles])) %> km
      </span>
      <% if local_assigns[:flight_link] %>
        <% flights_path = flight_link[:path] || "#flights" %>
        &middot;
        <% if flight_link[:total] %>
          <%= link_to(safe_join(["See all", content_tag(:span, pluralize(flight_link[:total], "flight"), class: "summary-total", "data-total": flight_link[:total])], " "), flights_path) %>
        <% else %>
          <%= link_to("See a list of these flights", flights_path) %>
        <% end %>
      <% end %>
    </div>
  <% end %>
</div>

<% unless Rails.env.test? # Integration tests inconsistently fail if trying to have javascript load map data %>
<script>
  mapboxgl.accessToken = "<%= Rails.application.credentials[:mapbox][:api_key] %>";
  const map_<%= map_id %> = new mapboxgl.Map({
    container: 'mapbox_<%= map_id %>',
    style: 'mapbox://styles/bogardpd/cly0gib62008301p82kk64np1', // Light Terrain - Flight Historian
    center: [0, 20],
    zoom: 0.5,
  });

  map_<%= map_id %>.on('load', () => {
     // Load data.
     map_<%= map_id %>.addSource('flights', {
      'type': 'geojson',
      'data': '<%= url_for(params.permit!.merge(map_id: map_attr[:id], extension: :geojson)) %>',
      'generateId': true,
    })

    // Add routes.
    map_<%= map_id %>.addLayer({
      'id': 'routes',
      'type': 'line',
      'source': 'flights',
      'filter': ['==', '$type', 'LineString'],
      'paint': {
        'line-width': [
          "interpolate", ["linear"], ["zoom"],
          4, 1.5,  // zoom <=  4: width 1.5
          20, 5.0, // zoom >= 20: width 5.0
        ],
        'line-color': '#0077bb',
        'line-opacity': 0.8,
      }
    });

    // Add airports.
    map_<%= map_id %>.addLayer({
      'id': 'airports',
      'type': 'circle',
      'source': 'flights',
      'filter': ['==', '$type', 'Point'],
      'paint': {
        'circle-radius': [
          "interpolate", ["linear"], ["zoom"],
          4, 3,   // zoom <=  4: radius  3
          20, 12, // zoom >= 20: radius 12
        ],
        'circle-color': '#000000',
      }
    });    

  });
</script>
<% end %>