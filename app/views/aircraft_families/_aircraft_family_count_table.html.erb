<% known_families, unknown_families = aircraft_families.partition{|af| af[:id].present?} %>
<% known_families.reject!{|af| af[:flight_count] == 0} %>

<% if known_families.any? %>
  <% new_aircraft_families ||= Array.new %>
  <% legend_range ||= "this date range" %>
  
  <table class="flightlog">
    <thead>
      <tr>
        <th class="counter">#</th>
    		<th class="aircraft_family">
          <%= is_summary ? "Aircraft Family" : sort_link("Aircraft Family", :aircraft, "aircraft", :asc, nil) %>
        </th>
        <th class="aircraft-code">
          <%= is_summary ? "Code" : sort_link("Code", :code, "code", :asc, nil) %>
        </th>
        <th class="aircraft_flights">
          <%= is_summary ? "Flights" : sort_link("Flights", :flights, "flights", :desc, nil) %>
        </th>
      </tr>
    </thead>
    <tbody>
    <% previous_count = nil %>

    <% aircraft_maximum = known_families.max_by{|i| i[:flight_count]}[:flight_count]%>
    <% known_families.each_with_index do |aircraft_family, index| %>

      <%= (new_aircraft_families.include?(aircraft_family[:id]) ? %Q(<tr class="new">) : "<tr>").html_safe %>
        <td class="counter"><%= ((is_summary || @sort_cat == :flights) && aircraft_family[:flight_count] == previous_count) ? "â‹®" : index + 1 %></td>
    		<td class="aircraft_family"><%= link_to("<span class=\"aircraft_manufacturer\">#{aircraft_family[:manufacturer]}</span> #{aircraft_family[:family_name]}#{"*" if new_aircraft_families.include?(aircraft_family[:id])}".html_safe, aircraft_family_path(aircraft_family[:id]), :title => "View flights on #{aircraft_family[:manufacturer]} #{aircraft_family[:family_name]} Family aircraft") %></td>
    		<td class="aircraft-code code-mono"><%= link_to(aircraft_family[:iata_aircraft_code], aircraft_family_path(aircraft_family[:id]), :title => "View flights on #{aircraft_family[:manufacturer]} #{aircraft_family[:family_name]} Family aircraft") %></td>
        <td class="aircraft_flights"><%= render "flights/graph_block", :value => aircraft_family[:flight_count], maximum: aircraft_maximum %></td>
      </tr>
    	<% previous_count = aircraft_family[:flight_count] %>
    <% end %>

      <tr><td colspan="5" class="flightlog_total"><%= pluralize(known_families.count, 'aircraft family') %></td></tr>
    </tbody>
  
  </table>

  <% if (known_families.map{|af| af[:id]} & new_aircraft_families).any? %>
    <p class="new-legend">* Aircraft family first flown in <%= legend_range %></p>
  <% end %>

  <% unknown_family_flights = unknown_families.any? ? unknown_families.first[:flight_count] : 0 %>
  <% if unknown_family_flights > 1 %>
    <p class="center"><%= unknown_family_flights %> flights with unknown aircraft families are not included in this table.</p>
  <% elsif unknown_family_flights == 1 %> 
    <p class="center">1 flight with an unknown aircraft family is not included in this table.</p>
  <% end %>

<% elsif is_summary %>
  <%= render_message(:warning, "All of these flights have unknown aircraft families.") %>
<% end %>
